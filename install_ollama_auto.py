"""
üîß –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏–π —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ Ollama
–î–ª—è Windows, Linux –∏ macOS
"""
import os
import sys
import platform
import subprocess
import urllib.request
import tempfile
from pathlib import Path

def get_system_info():
    """English docstring"""
    system = platform.system().lower()
    arch = platform.machine().lower()

    if arch in ['x86_64', 'amd64']:
        arch = 'amd64'
    elif arch in ['aarch64', 'arm64']:
        arch = 'arm64'
    else:
        arch = 'unknown'

    return system, arch

def check_ollama_installed():
    """English docstring"""
    try:
        result = subprocess.run(['ollama', '--version'],
                              capture_output=True, text=True, timeout=10)
        if result.returncode == 0:
            return True, result.stdout.strip()
    except:
        pass
    return False, None

def install_ollama_windows():
    """English docstring"""
    print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ollama –¥–ª—è Windows...")

    url = "https://ollama.ai/download/windows"

    try:
        print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞...")
        with tempfile.NamedTemporaryFile(suffix='.exe', delete=False) as tmp_file:
            urllib.request.urlretrieve(url, tmp_file.name)
            installer_path = tmp_file.name

        print("üöÄ –ó–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞...")
        print("‚ö†Ô∏è  –°–ª–µ–¥—É–π—Ç–µ –∏–Ω—Å—Ç—Ä—É–∫—Ü–∏—è–º —É—Å—Ç–∞–Ω–æ–≤—â–∏–∫–∞")

        subprocess.run([installer_path], check=True)

        os.unlink(installer_path)

        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        return True

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        return False

def install_ollama_linux():
    """English docstring"""
    print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ollama –¥–ª—è Linux...")

    try:
        print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞...")

        cmd = "curl -fsSL https://ollama.ai/install.sh | sh"
        result = subprocess.run(cmd, shell=True, check=True)

        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        return True

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:")
        print("   curl -fsSL https://ollama.ai/install.sh | sh")
        return False

def install_ollama_macos():
    """English docstring"""
    print("üîß –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ollama –¥–ª—è macOS...")

    try:
        subprocess.run(['brew', '--version'],
                      capture_output=True, check=True)
        homebrew_available = True
    except:
        homebrew_available = False

    if homebrew_available:
        try:
            print("üç∫ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ —á–µ—Ä–µ–∑ Homebrew...")
            subprocess.run(['brew', 'install', 'ollama'], check=True)
            print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
            return True
        except subprocess.CalledProcessError:
            print("‚ö†Ô∏è  –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏ —á–µ—Ä–µ–∑ Homebrew, –ø—Ä–æ–±—É–µ–º –∞–ª—å—Ç–µ—Ä–Ω–∞—Ç–∏–≤–Ω—ã–π —Å–ø–æ—Å–æ–±...")

    try:
        print("üì• –ó–∞–≥—Ä—É–∑–∫–∞ –∏ –∑–∞–ø—É—Å–∫ —É—Å—Ç–∞–Ω–æ–≤–æ—á–Ω–æ–≥–æ —Å–∫—Ä–∏–ø—Ç–∞...")
        cmd = "curl -fsSL https://ollama.ai/install.sh | sh"
        subprocess.run(cmd, shell=True, check=True)
        print("‚úÖ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞!")
        return True

    except subprocess.CalledProcessError as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏: {e}")
        print("üí° –ü–æ–ø—Ä–æ–±—É–π—Ç–µ —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å –≤—Ä—É—á–Ω—É—é:")
        print("   –°–∫–∞—á–∞–π—Ç–µ —Å https://ollama.ai/download/mac")
        return False

def start_ollama_service():
    """English docstring"""
    print("üöÄ –ó–∞–ø—É—Å–∫ Ollama...")

    system = platform.system().lower()

    try:
        if system == "windows":
            subprocess.Popen(['ollama', 'serve'],
                           creationflags=subprocess.CREATE_NO_WINDOW)
        else:
            subprocess.Popen(['ollama', 'serve'],
                           stdout=subprocess.DEVNULL,
                           stderr=subprocess.DEVNULL)

        print("‚úÖ Ollama –∑–∞–ø—É—â–µ–Ω–∞!")
        return True

    except Exception as e:
        print(f"‚ö†Ô∏è  –û—à–∏–±–∫–∞ –∑–∞–ø—É—Å–∫–∞: {e}")
        return False

def pull_deepseek_model():
    """English docstring"""
    print("üì¶ –ó–∞–≥—Ä—É–∑–∫–∞ –º–æ–¥–µ–ª–∏ deepseek-r1:8b...")
    print("‚è≥ –≠—Ç–æ –º–æ–∂–µ—Ç –∑–∞–Ω—è—Ç—å –Ω–µ—Å–∫–æ–ª—å–∫–æ –º–∏–Ω—É—Ç (~5GB)...")

    try:
        process = subprocess.Popen(
            ['ollama', 'pull', 'deepseek-r1:8b'],
            stdout=subprocess.PIPE,
            stderr=subprocess.STDOUT,
            text=True,
            bufsize=1,
            universal_newlines=True
        )

        for line in process.stdout:
            if line.strip():
                print(f"üì• {line.strip()}")

        process.wait()

        if process.returncode == 0:
            print("‚úÖ –ú–æ–¥–µ–ª—å deepseek-r1:8b –∑–∞–≥—Ä—É–∂–µ–Ω–∞!")
            return True
        else:
            print("‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏")
            return False

    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –º–æ–¥–µ–ª–∏: {e}")
        return False

def main():
    """English docstring"""
    print("üñ•Ô∏è  DarkDeepSeek - –ê–≤—Ç–æ—É—Å—Ç–∞–Ω–æ–≤—â–∏–∫ Ollama")
    print("=" * 50)

    system, arch = get_system_info()
    print(f"üîç –°–∏—Å—Ç–µ–º–∞: {system.title()} {arch}")

    is_installed, version = check_ollama_installed()

    if is_installed:
        print(f"‚úÖ Ollama —É–∂–µ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {version}")
    else:
        print("üì¶ Ollama –Ω–µ –Ω–∞–π–¥–µ–Ω–∞, –Ω–∞—á–∏–Ω–∞–µ–º —É—Å—Ç–∞–Ω–æ–≤–∫—É...")

        if system == "windows":
            success = install_ollama_windows()
        elif system == "linux":
            success = install_ollama_linux()
        elif system == "darwin":
            success = install_ollama_macos()
        else:
            print(f"‚ùå –ù–µ–ø–æ–¥–¥–µ—Ä–∂–∏–≤–∞–µ–º–∞—è —Å–∏—Å—Ç–µ–º–∞: {system}")
            return False

        if not success:
            print("‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ Ollama –Ω–µ —É–¥–∞–ª–∞—Å—å")
            return False

        print("üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —É—Å—Ç–∞–Ω–æ–≤–∫–∏...")
        time.sleep(2)
        is_installed, version = check_ollama_installed()

        if not is_installed:
            print("‚ùå Ollama –Ω–µ –±—ã–ª–∞ —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞ –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ")
            return False

        print(f"‚úÖ Ollama —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–∞: {version}")

    if not start_ollama_service():
        print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–ø—É—Å—Ç–∏—Ç—å Ollama –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print("üí° –ó–∞–ø—É—Å—Ç–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: ollama serve")

    print("‚è≥ –û–∂–∏–¥–∞–Ω–∏–µ –∑–∞–ø—É—Å–∫–∞ —Å–µ—Ä–≤–∏—Å–∞...")
    time.sleep(5)

    if not pull_deepseek_model():
        print("‚ö†Ô∏è  –ù–µ —É–¥–∞–ª–æ—Å—å –∑–∞–≥—Ä—É–∑–∏—Ç—å –º–æ–¥–µ–ª—å –∞–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–∏")
        print("üí° –ó–∞–≥—Ä—É–∑–∏—Ç–µ –≤—Ä—É—á–Ω—É—é: ollama pull deepseek-r1:8b")
        return False

    print("\nüéâ –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –∑–∞–≤–µ—Ä—à–µ–Ω–∞ —É—Å–ø–µ—à–Ω–æ!")
    print("üöÄ –¢–µ–ø–µ—Ä—å –º–æ–∂–µ—Ç–µ –∑–∞–ø—É—Å—Ç–∏—Ç—å: python start.py")
    print("   –∏–ª–∏: ./start.bat (Windows) / ./start.sh (Linux/macOS)")

    return True

if __name__ == "__main__":
    import time
    try:
        main()
    except KeyboardInterrupt:
        print("\n‚ùå –£—Å—Ç–∞–Ω–æ–≤–∫–∞ –ø—Ä–µ—Ä–≤–∞–Ω–∞ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–º")
    except Exception as e:
        print(f"\n‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞: {e}")

    input("\n–ù–∞–∂–º–∏—Ç–µ Enter –¥–ª—è –≤—ã—Ö–æ–¥–∞...")
